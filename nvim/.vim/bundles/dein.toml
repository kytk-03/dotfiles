[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
            let g:deoplete#enable_at_startup = 1
            set completeopt-=preview
           '''

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
            " Plugin key-mappings.
            " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
            imap <C-k>     <Plug>(neosnippet_expand_or_jump)
            smap <C-k>     <Plug>(neosnippet_expand_or_jump)
            xmap <C-k>     <Plug>(neosnippet_expand_target)

            " SuperTab like snippets behavior.
            " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
            "imap <expr><TAB>
            " \ pumvisible() ? "\<C-n>" :
            " \ neosnippet#expandable_or_jumpable() ?
            " \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
            smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

            " For conceal markers.
            if has('conceal')
              set conceallevel=2 concealcursor=niv
            endif
            let g:tex_flavor="latex"
            '''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = 'let g:NERDTreeShowHidden=1'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''map <C-n> <plug>NERDTreeTabsToggle<CR>
              let g:nerdtree_tabs_open_on_console_startup=0
           '''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-unimpaired'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
            let g:quickrun_config = get(g:, 'quickrun_config', {})
            let g:quickrun_config._ = {
              \ 'runner'    : 'vimproc',
              \ 'runner/vimproc/updatetime' : 60,
              \ 'outputter' : 'error',
              \ 'outputter/error/success' : 'buffer',
              \ 'outputter/error/error'   : 'quickfix',
              \ 'outputter/buffer/split'  : ':rightbelow 50vs',
              \ 'outputter/buffer/close_on_empty' : 1,
              \ }
            let g:quickrun_config['tex'] = { 'command' : 'latexmk',
              \              'exec': ['%c -gg -pdfdvi %s', 'evince %s:r.pdf'],
              \               }
            nnoremap <silent><F5> :w<CR>:QuickRun<CR>
           '''

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'tpope/vim-fugitive'
